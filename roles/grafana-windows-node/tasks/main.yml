---

- block:
#    - name: create Prometheus datasource
#      uri:
#        url: http://{{ ansible_host }}:{{ grafana_external_port }}/api/datasources
#        user: "{{ grafana_admin_user }}"
#        password: "{{ grafana_admin_password }}"
#        method: POST
#        status_code: 200
#        force_basic_auth: yes
#        body_format: json
#        body: "{{ lookup('file', 'prometheus_datasource.json') }}"
#      register: grafana_datasource_create
#      delegate_to: localhost
#      become: no
#      changed_when: grafana_datasource_create.status in [200]
#      failed_when: grafana_datasource_create.status not in [200, 409]

    - name: create prometheus datasource
      community.grafana.grafana_datasource:
        grafana_url: http://{{ ansible_host }}:{{ grafana_external_port }}
        grafana_user: "{{ grafana_admin_user }}"
        grafana_password: "{{ grafana_admin_password }}"
        validate_certs: no
        name: Prometheus
        org_id: "1"
        ds_type: prometheus
        ds_url: http://localhost:9090
        access: proxy
        is_default: yes
        tls_skip_verify: true

    - name: import dashboards
      uri:
        url: http://{{ ansible_host }}:{{ grafana_external_port }}/api/dashboards/db
        user: "{{ grafana_admin_user }}"
        password: "{{ grafana_admin_password }}"
        method: POST
        status_code: 200
        force_basic_auth: yes
        body_format: json
        body: "{{ lookup('file', item) }}"
      register: grafana_dashboard_import
      delegate_to: localhost
      become: no
      changed_when: grafana_dashboard_import.status in [200]
      failed_when: grafana_dashboard_import.status not in [200, 412]
      loop:
        - windows_node.json
        - prometheus_alerts.json

#    - name: import prometheus alerts dashboard
#      community.grafana.grafana_dashboard:
#        grafana_url: http://{{ ansible_host }}:{{ grafana_external_port }}
#        grafana_user: "{{ grafana_admin_user }}"
#        grafana_password: "{{ grafana_admin_password }}"
#        dashboard_id: "{{ grafana_prometheus_alerts_dashboard_id }}"
#        dashboard_revision: 1
  when:
    - grafana_admin_user is defined
    - grafana_admin_password is defined
